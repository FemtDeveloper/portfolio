import { useResponsive } from "@/hooks";
import { useState } from "react";

const NodeIcon = ({ size = 80, color = "currentColor" }: IconProps) => {
  const [isHovered, setIsHovered] = useState(false);
  const { isMobile } = useResponsive();
  const handleMouseEnter = () => setIsHovered(true);
  const handleMouseLeave = () => setIsHovered(false);

  const fillMain = isHovered ? "#689F63" : "#fff";
  const fill = isHovered ? "#fff" : "#454545";

  const transitionStyle = { transition: "fill 0.2s ease-in-out" };

  const shadowStyle = isHovered
    ? { filter: "drop-shadow(2px 20px 50px #689F6353)" }
    : {};

  return (
    <svg
      width={isMobile ? 48 : size}
      height={isMobile ? 48 : size}
      viewBox="0 0 80 80"
      onMouseEnter={handleMouseEnter}
      onMouseLeave={handleMouseLeave}
      style={{ ...shadowStyle, ...transitionStyle }}
    >
      <path
        d="M14.1667 6.44812e-06H65.8333C67.6942 -0.00179242 69.5372 0.372807 71.2568 1.10237C72.9763 1.83193 74.5387 2.90212 75.8546 4.25171C77.1704 5.60129 78.2139 7.20377 78.9252 8.96743C79.6365 10.7311 80.0017 12.6213 80 14.5299V65.4701C80.0017 67.3787 79.6365 69.2689 78.9252 71.0326C78.2139 72.7962 77.1704 74.3987 75.8546 75.7483C74.5387 77.0979 72.9763 78.1681 71.2568 78.8976C69.5372 79.6272 67.6942 80.0018 65.8333 80H14.1667C12.3058 80.0018 10.4628 79.6272 8.74325 78.8976C7.02368 78.1681 5.46126 77.0979 4.14541 75.7483C2.82957 74.3987 1.78613 72.7962 1.07481 71.0326C0.363487 69.2689 -0.00174761 67.3787 6.28692e-06 65.4701V14.5299C-0.00174761 12.6213 0.363487 10.7311 1.07481 8.96743C1.78613 7.20377 2.82957 5.60129 4.14541 4.25171C5.46126 2.90212 7.02368 1.83193 8.74325 1.10237C10.4628 0.372807 12.3058 -0.00179242 14.1667 6.44812e-06Z"
        fill={fill}
        style={transitionStyle}
      />
      <path
        d="M39.8221 70C39.0186 70 38.2206 69.7892 37.5162 69.3836L30.1763 65.0381C29.08 64.4251 29.615 64.2082 29.9765 64.0833C31.4382 63.5715 31.7349 63.4559 33.2951 62.5699C33.4591 62.4763 33.6737 62.5093 33.8416 62.6084L39.4803 65.9545C39.684 66.0645 39.9729 66.0645 40.1617 65.9545L62.1478 53.2636C62.3514 53.148 62.4835 52.9114 62.4835 52.6692V27.2986C62.4835 27.0454 62.3514 26.8198 62.1434 26.6932L40.1661 14.0134C39.9624 13.8923 39.6928 13.8923 39.4892 14.0134L17.5163 26.6932C17.3033 26.8143 17.1679 27.0509 17.1679 27.2931V52.6637C17.1679 52.9059 17.3 53.137 17.5091 53.2526L23.5298 56.7308C26.7989 58.3653 28.7966 56.4391 28.7966 54.5019V29.4614C28.7966 29.1037 29.0773 28.8285 29.435 28.8285H32.2197C32.5664 28.8285 32.8526 29.1037 32.8526 29.4614V54.5129C32.8526 58.8716 30.4751 61.3756 26.3421 61.3756C25.0708 61.3756 24.0692 61.3756 21.2734 59.9998L15.5059 56.6757C14.0805 55.8502 13.2 54.3093 13.2 52.6637V27.2931C13.2 25.642 14.0805 24.1011 15.5059 23.2866L37.514 10.5902C38.9063 9.80325 40.7555 9.80325 42.1368 10.5902L64.1174 23.2921C65.5373 24.1121 66.4234 25.6475 66.4234 27.2986V52.6692C66.4234 54.3148 65.5373 55.8502 64.1174 56.6757L42.1368 69.3721C41.4324 69.7793 40.6344 69.9884 39.8199 69.9884"
        fill={fillMain}
        style={transitionStyle}
      />
      <path
        d="M46.6133 52.5179C36.9934 52.5179 34.9764 48.102 34.9764 44.3982C34.9764 44.046 35.2604 43.7653 35.6131 43.7653H38.4529C38.7666 43.7653 39.0307 43.9937 39.0803 44.3035C39.5095 47.1972 40.7863 48.6567 46.6034 48.6567C51.2373 48.6567 53.2075 47.61 53.2075 45.1527C53.2075 43.7383 52.6462 42.6872 45.4477 41.9827C39.427 41.3884 35.7067 40.062 35.7067 35.2466C35.7067 30.8108 39.449 28.1692 45.7174 28.1692C52.7562 28.1692 56.2454 30.6127 56.6857 35.8629C56.7022 36.0446 56.6361 36.2207 56.515 36.3527C56.394 36.4793 56.2234 36.5564 56.0473 36.5564H53.191C52.8938 36.5564 52.6351 36.3472 52.5746 36.0611C51.8867 33.0177 50.2247 32.0436 45.7064 32.0436C40.6487 32.0436 40.0599 33.8047 40.0599 35.1255C40.0599 36.727 40.7533 37.1948 47.5775 38.0973C54.3357 38.9944 57.5442 40.2602 57.5442 45.0096C57.5442 49.7976 53.5487 52.5438 46.5814 52.5438L46.6133 52.5179Z"
        fill={fillMain}
        style={transitionStyle}
      />
    </svg>
  );
};

export default NodeIcon;
